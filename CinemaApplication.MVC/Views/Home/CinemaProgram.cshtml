@inject IAuthenticationProcedures _authenticationProcedures;
@model CinemaProgramViewModel

@{
    ViewData["Title"] = "Cinema Program";
    bool isSignedIn = await _authenticationProcedures.CheckIfUserIsLoggedIn();
    bool hasBankCards = true;
    if(Model.BankCards is null)
    {
        hasBankCards = false;
    }
    else if(Model.BankCards.Count == 0)
    {
        hasBankCards = false;
    }
    int count = 0;
}

<style>
    .accordion-button {
        background-color: white; /* --bs-accordion-button-bg equivalent */
        color: #333; /* --bs-accordion-button-color equivalent */
        border: 1px solid #c8c9ca; /* --bs-accordion-border-color equivalent */
    }

    .accordion-button:not(.collapsed) {
        background-color : black !important;
        color: white;
    }

    .accordion-button::after {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-plus-circle' viewBox='0 0 16 16'%3E%3Cpath d='M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z'/%3E%3Cpath d='M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z'/%3E%3C/svg%3E");
    }

    .accordion-button:not(.collapsed)::after {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-dash' viewBox='0 0 16 16'%3E%3Cpath d='M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z'/%3E%3C/svg%3E");
        background-color: white !important;
    }

    .accordion-striped .accordion-button {
        background-color: #ececec;
    }

    .error-message {
        color: red !important;
        font-size: 14px !important;

    }

    .error-container {
        display: flex !important;
        flex-direction: column !important;
    }

    .error-container a {
        margin-top: 4px;
    }
</style>


@if ((bool)ViewData["NoSeatsLeft"]! || (bool)ViewData["CreateTicketFailure"]!){
    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
        <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
            <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
        </symbol>
    </svg>
    <div class="row">
        <div class="col-12">
            <div class="alert alert-danger d-flex align-items-center alert-dismissible fade show" role="alert">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:"><use xlink:href="#exclamation-triangle-fill" /></svg>
                @if ((bool)ViewData["NoSeatsLeft"]!)
                {
                    <div>There are not enough seats left for this movie projection for your reservation.</div>
                }
                else if ((bool)ViewData["CreateTicketFailure"]!)
                {
                    <div>Your ticket purchase could not be completed. Please try again or you can contact us through our email kinnaskonstantinos0@gmail.com</div>
                }
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        </div>
    </div>
}
else if ((bool)ViewData["CreateTicketSuccess"]!)
{
    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
        <symbol id="check-circle-fill" fill="currentColor" viewBox="0 0 16 16">
            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
        </symbol>
    </svg>
    <div class="row">
        <div class="col-12">
            <div class="alert alert-success d-flex align-items-center alert-dismissible fade show" role="alert">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Success:"><use xlink:href="#check-circle-fill" /></svg>
                @if ((bool)ViewData["CreateTicketSuccess"]!)
                {
                    <div>Your ticker purchase has been completed successfully! You can see your purchased tickets in your account page.</div>
                }
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        </div>
    </div>
}

<h2 class="text-center mb-3">Movies In Cinema Right Now!</h2>
<div class="offset-2 col-8 mb-4">
    <div class="accordion shadow" id="cinemaMenuProgramAccordion">
        @foreach (Movie movie in Model.Movies)
        {
            var startingTimeComparator = Comparer<MovieProjection>.Create((p1, p2) => p1.StartingTime.CompareTo(p2.StartingTime));
            movie.Projections.Sort(startingTimeComparator);

            <div class="accordion-item">
                @if (count % 2 == 0)
                {
                    <h2 class="accordion-header" id="headingOne">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@movie.Title!.GetHashCode()"
                                aria-expanded="false" aria-controls="collapse-@movie.Title.GetHashCode()">
                            @movie.Title
                        </button>
                    </h2>
                }
                else
                {
                    <h2 class="accordion-header accordion-striped" id="headingOne">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@movie.Title!.GetHashCode()"
                                aria-expanded="false" aria-controls="collapse-@movie.Title.GetHashCode()">
                            @movie.Title
                        </button>
                    </h2>
                }
                <div id="collapse-@movie.Title.GetHashCode()" class="accordion-collapse collapse" aria-labelledby="headingOne">
                    <div class="accordion-body">
                        <table class="table table-bordered table-striped">
                            <thead class="table-dark">
                                <tr>
                                    <th>Date</th>
                                    <th>Starting Hour</th>
                                    <th>Ending Hour</th>
                                    <th>Room</th>
                                    <th>Tickets</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (MovieProjection projection in movie.Projections)
                                {

                                    if (projection.StartingTime > DateTime.Now && projection.StartingTime < DateTime.Now.AddDays(7))
                                    {
                                        <tr>
                                            @{
                                                string dayName = projection.StartingTime.ToString("ddd dd/MM", System.Globalization.CultureInfo.GetCultureInfo("en-US"));
                                                dayName = dayName.Substring(0, 3);
                                            }

                                            <td>@dayName</td>
                                            <td>@projection.StartingTime.Hour : @projection.StartingTime.Minute</td>
                                            <td>@projection.EndingTime.Hour : @projection.EndingTime.Minute</td>
                                            <td>@projection.CinemaRoomId</td>
                                            <td>
                                                <a class="btn btn-sm btn-outline-primary" onclick="checkConditionAndShowModal(event, '@projection.Id' , '@isSignedIn' , '@hasBankCards')">
                                                    Get Tickets
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            count += 1;
        }
    </div>
</div>

@foreach (Movie movie in Model.Movies)
{
    @foreach (MovieProjection projection in movie.Projections)
    {
        <!-- Modal To Add Tickets -->
        <div class="modal fade" id="getTicketsModal-@projection.Id" tabindex="-1" role="dialog">
            <form id="getTicketsForm-@projection.Id method="post" asp-action="PurchaseTicket" asp-controller="Account">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="createProjectionTitle">Purchase Tickets Form</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body" style="text-align: left;">
                            <div class="container">
                                <div class="row">
                                    <div class="row mb-3">
                                        <div class="col-6">
                                            <label asp-for="@Model.Ticket.MovieProjectionId" class="form-label">Projection Identifier:</label>
                                            <input type="text" class="form-control" asp-for="@Model.Ticket.MovieProjectionId" value="@projection.Id" readOnly>
                                        </div>
                                        <div class="col-6">
                                            <label for="projectionRoomId-@projection.Id" class="form-label">Projection Room Identifier:</label>
                                            <input type="text" class="form-control" id="projectionRoomId-@projection.Id" value="@projection.CinemaRoomId" readOnly>
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-12">
                                            <label for="bankCardNumber-@projection.Id" class="form-label">Choose BankCard:</label>
                                            <select name="bankCardNumber" id="bankCardNumber-@projection.Id" class="form-select">
                                                @if(Model.BankCards is not null)
                                                {
                                                    foreach (BankCard bankCard in Model.BankCards)
                                                    {
                                                        <option value="@bankCard.Id">BankCard Number: @bankCard.CardNumber</option>
                                                    }
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-4">
                                            <label asp-for="@Model.Ticket.NumberOfSeats" class="form-label">Seats:</label>
                                        </div>
                                        <div class="col-4">
                                            <label for="refundPrice-@projection.Id" class="form-label">Ticket Price:</label>
                                        </div>
                                        <div class="col-4">
                                            <label for="totalRefundPrice-@projection.Id" class="form-label ms-2">Final Price:</label>
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="input-group mb-3">
                                            <input onchange="updateFinalPrice(this.value,@projection.Id)" type="number" class="form-control"
                                                   asp-for="@Model.Ticket.NumberOfSeats" value="1">
                                            <span class="input-group-text text-white bg-dark" id="basic-addon1">&times;</span>
                                            <input type="text" class="form-control" id="refundPrice-@projection.Id" value="10€" readOnly>
                                            <span class="input-group-text text-white bg-dark" id="basic-addon2">&equals;</span>
                                            <input type="text" class="form-control" id="totalRefundPrice-@projection.Id"
                                                   value="10€" readOnly>
                                            <input asp-for="@Model.Ticket.ReservationRefundPrice" data-projectionId="@projection.Id" value="10" hidden/>
                                        </div>
                                        <span asp-validation-for="@Model.Ticket.NumberOfSeats" class="text-danger"></span>
                                    </div>
                                    <input asp-for="@Model.Ticket.UserId" value="@Model.UserId" hidden/>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary">Complete Purchase</button>
                            <button type="button" class="btn btn-dark" data-bs-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    }
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>

        function checkConditionAndShowModal(event, projectionId, showModalCondition, hasBankCards) {
            // Your condition check here
            if (showModalCondition === 'False') {
                // Condition is met, prevent modal from showing
                event.preventDefault();
                alert("You need to be logged in to by tickets.");
            }
            else if(hasBankCards === 'False'){
                event.preventDefault();
                alert("You need to at least have 1 bankCard added to your account.");
            }
            else {
                // Condition is not met, proceed to show the modal
                let modalId = "#getTicketsModal-" + projectionId;
                $(modalId).modal('show'); // Assuming you're using Bootstrap modal
            }
        }

        function updateFinalPrice(reservedSeats, projectionId) {
            let finalPrice = document.getElementById('totalRefundPrice-' + projectionId);
            let inputSelector = '[data-projectionId="' + projectionId + '"]';

            if (reservedSeats < 1 || reservedSeats > 10){
                finalPrice.value = "invalid amount";
                document.querySelector(inputSelector).value = -1;
            }
            else {
                let finalPriceValue = 10 * parseInt(reservedSeats);
                finalPrice.value = finalPriceValue + "€";
                document.querySelector(inputSelector).value = finalPriceValue;
            }
        }
    </script>

}
